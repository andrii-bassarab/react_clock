{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timerClock","this","window","setInterval","setState","console","info","prevProps","props","clockName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleClick","handleContextMenu","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,WAAa,EALf,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,IAAMP,GAAc,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAEzD,EAAKK,SAAS,CAAER,gBAGhBS,QAAQC,KAAK,EAAKX,MAAMC,eACvB,OAfP,gCAkBE,SAAmBW,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WAErCJ,QAAQK,MAAR,uBACkBH,EAAUE,UAD5B,eAC4CR,KAAKO,MAAMC,cAtB7D,kCA2BE,WACEP,OAAOS,cAAcV,KAAKD,cA5B9B,oBA+BE,WACE,IAAQS,EAAcR,KAAKO,MAAnBC,UACAb,EAAgBK,KAAKN,MAArBC,YAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGhB,WA5CX,GAA2BiB,aCD3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAGX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVV,UAAW,WAHf,EAMEW,QAAU,EANZ,EAwBEC,YAAc,WACZ,EAAKjB,SAAS,CAAEe,UAAU,KAzB9B,EA4BEG,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEe,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBlB,KAAKmB,QAAUlB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEK,UAAWK,QAC1B,MAEHW,SAASC,iBAAiB,cAAezB,KAAKqB,mBAE9CG,SAASC,iBAAiB,QAASzB,KAAKoB,eAf5C,kCAkBE,WACEnB,OAAOS,cAAcV,KAAKmB,SAC1BK,SAASE,oBAAoB,cAAe1B,KAAKqB,mBACjDG,SAASE,oBAAoB,QAAS1B,KAAKoB,eArB/C,oBAiCE,WACE,MAAgCpB,KAAKN,MAA7BwB,EAAR,EAAQA,SAAUV,EAAlB,EAAkBA,UAElB,OACE,sBAAKG,UAAU,MAAf,UACE,6CAGEO,GAAY,cAAC,EAAD,CAAOV,UAAWA,WAzCxC,GAAyBI,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.263048a2.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface State {\n  currentTime: string,\n}\n\ninterface Props {\n  clockName: string,\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerClock = 0;\n\n  componentDidMount() {\n    this.timerClock = window.setInterval(() => {\n      const currentTime = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({ currentTime });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(\n        `Renamed from ${prevProps.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerClock);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  hasClock: boolean,\n  clockName: string,\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          hasClock && <Clock clockName={clockName} />\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}